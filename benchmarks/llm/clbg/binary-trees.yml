name: binary-trees
args: [21]
expected_stdout: |
    stretch tree of depth 22	 check: 8388607
    2097152	 trees of depth 4	 check: 65011712
    524288	 trees of depth 6	 check: 66584576
    131072	 trees of depth 8	 check: 66977792
    32768	 trees of depth 10	 check: 67076096
    8192	 trees of depth 12	 check: 67100672
    2048	 trees of depth 14	 check: 67106816
    512	 trees of depth 16	 check: 67108352
    128	 trees of depth 18	 check: 67108736
    32	 trees of depth 20	 check: 67108832
    long lived tree of depth 21	 check: 4194303
description: | # https://benchmarksgame-team.pages.debian.net/benchmarksgame/description/binarytrees.html#binarytrees
    **Variance**
    When possible, use default GC; otherwise use per node allocation or use a library memory pool.
    As a practical matter, the myriad ways to tune GC will not be accepted.
    As a practical matter, the myriad ways to custom allocate memory will not be accepted.
    Please don't implement your own custom "arena" or "memory pool" or "free list" - they will not be accepted.

    **The work**
    The work is to fully create perfect binary trees - before any tree nodes are GC'd - using at-minimum the number of allocations of Jeremy Zerfas's C program. Don't optimize away the work.
    Leaf nodes must be the same as interior nodes - the same memory allocation. Don't optimize away the work.

    **How to implement**
    We ask that contributed programs not only give the correct result, but also use the same algorithm to calculate that result.
    Each program should:
        - define a tree node class and methods, or a tree node record and procedures, or an algebraic data type and functions, orâ€¦
        - allocate a binary tree to 'stretch' memory, check it exists, and deallocate it
        - allocate a long-lived binary tree which will live-on while other trees are allocated and deallocated
        - allocate, walk, and deallocate many bottom-up binary trees
            - allocate a tree
            - walk the tree, counting the nodes (and maybe deallocate the nodes)
            - deallocate the tree
        - check that the long-lived binary tree still exists
